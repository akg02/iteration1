GET    /                            controllers.SearchController.search(request: Request)
GET    /websocket/search            controllers.SearchController.searchWebSocket

GET    /topic/:topic                controllers.SearchController.topic(topic: String, request: Request)
GET    /websocket/topic             controllers.SearchController.topicWebSocket

GET    /commits/:user/:repo     controllers.SearchController.commitSocketPage(request: Request, user: String, repo: String)
GET    /userSocket/:user             controllers.SearchController.UserSocketPage(request: Request, user: String)
GET	   /issueStatisticsSocket/:user/:repo controllers.SearchController.issueStatisticsPage(request: Request, user: String, repo: String)

GET    /profile/:user               controllers.SearchController.profile(user: String)

GET    /repository/:user/:repo      controllers.SearchController.repository(user: String, repo: String)
GET    /repoSocket/:user/:repo          controllers.SearchController.repositorySocketPage(request: Request, user: String, repo: String)
GET    /repoWebSocket            controllers.SearchController.repositorySocket

GET    /issueStatistics/:user/:repo			controllers.SearchController.issueStatisticsPage(request: Request, user: String, repo: String)
#controllers.SearchController.issueStatistics(user: String, repo: String, request:Request)

GET     /commitSocket                         controllers.SearchController.commitSocket
GET     /userDataSocket                         controllers.SearchController.userDataSocket
GET		/issueStatisticsSocket		controllers.SearchController.issueStatisticsSocket

GET     /ws                         controllers.SearchController.ws
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
